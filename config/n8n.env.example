# ================================================================
# DarkSpere n8n Queue Mode Configuration
# Purpose: Enable horizontal scaling with Redis-backed queue
# ================================================================

# ================================================================
# QUEUE MODE CONFIGURATION
# ================================================================

# Enable queue mode (CRITICAL for scaling)
EXECUTIONS_MODE=queue

# Redis connection for queue backend
QUEUE_BULL_REDIS_HOST=localhost
QUEUE_BULL_REDIS_PORT=6379
QUEUE_BULL_REDIS_PASSWORD=CHANGE_ME_REDIS_PASSWORD
QUEUE_BULL_REDIS_DB=0

# Redis connection timeout
QUEUE_BULL_REDIS_TIMEOUT_THRESHOLD=10000

# Use TLS for Redis (if applicable)
# QUEUE_BULL_REDIS_TLS=true

# ================================================================
# WORKER CONFIGURATION
# ================================================================

# Number of concurrent workflow executions per worker
# Recommended: 2-4 per CPU core
N8N_CONCURRENCY=10

# Worker timeout (max execution time per workflow)
# 30 seconds for SMS workflows (Twilio has 10s webhook timeout)
QUEUE_WORKER_TIMEOUT=30

# Worker lock duration (prevent duplicate execution)
QUEUE_WORKER_LOCK_DURATION=30000

# Worker lock renewal time
QUEUE_WORKER_LOCK_RENEW_TIME=15000

# Stalled check interval (check for stuck jobs)
QUEUE_WORKER_STALLED_INTERVAL=30000

# Max stalled count before job fails
QUEUE_WORKER_MAX_STALLED_COUNT=3

# ================================================================
# DATABASE CONFIGURATION
# ================================================================

# PostgreSQL connection (use darkspere_worker role)
DB_TYPE=postgresdb
DB_POSTGRESDB_HOST=YOUR_SUPABASE_HOST
DB_POSTGRESDB_PORT=5432
DB_POSTGRESDB_DATABASE=postgres
DB_POSTGRESDB_USER=darkspere_worker
DB_POSTGRESDB_PASSWORD=CHANGE_ME_WORKER_PASSWORD

# Connection pool size (per worker)
DB_POSTGRESDB_POOL_SIZE=20

# Schema
DB_POSTGRESDB_SCHEMA=public

# ================================================================
# EXECUTION SETTINGS
# ================================================================

# Save successful executions
EXECUTIONS_DATA_SAVE_ON_SUCCESS=all

# Save failed executions
EXECUTIONS_DATA_SAVE_ON_ERROR=all

# Save manual executions
EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=true

# Max execution data to save (in MB)
EXECUTIONS_DATA_MAX_AGE=336  # 14 days in hours

# Prune executions older than this
EXECUTIONS_DATA_PRUNE=true
EXECUTIONS_DATA_PRUNE_MAX_AGE=336

# ================================================================
# PERFORMANCE TUNING
# ================================================================

# Generic timezone
GENERIC_TIMEZONE=America/Los_Angeles

# Timezone for scheduled workflows
WORKFLOWS_DEFAULT_TIMEZONE=America/Los_Angeles

# Maximum payload size (for large SMS contexts)
N8N_PAYLOAD_SIZE_MAX=16

# Request timeout (for external API calls)
N8N_REQUEST_TIMEOUT=30000

# ================================================================
# LOGGING
# ================================================================

# Log level: error, warn, info, debug
N8N_LOG_LEVEL=info

# Log output: console, file
N8N_LOG_OUTPUT=console,file

# Log file location
N8N_LOG_FILE_LOCATION=/var/log/n8n/

# Log file count (rotation)
N8N_LOG_FILE_COUNT_MAX=10

# Log file size max
N8N_LOG_FILE_SIZE_MAX=16

# ================================================================
# SECURITY
# ================================================================

# Encryption key for credentials (IMPORTANT: Keep secret!)
N8N_ENCRYPTION_KEY=CHANGE_ME_ENCRYPTION_KEY_32_CHARS

# Basic auth for n8n UI (optional)
# N8N_BASIC_AUTH_ACTIVE=true
# N8N_BASIC_AUTH_USER=admin
# N8N_BASIC_AUTH_PASSWORD=CHANGE_ME

# Webhook URL (for external access)
WEBHOOK_URL=https://thecirclestudios.app.n8n.cloud

# ================================================================
# SCALING CONFIGURATION
# ================================================================

# Run as main instance (handles UI and scheduling)
# Set to false for worker-only instances
N8N_PROCESS_TYPE=main

# For worker instances, set:
# N8N_PROCESS_TYPE=worker

# Skip webhook deregistration on shutdown
# (Useful for zero-downtime deployments)
N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN=true

# ================================================================
# MONITORING
# ================================================================

# Enable metrics endpoint
N8N_METRICS=true

# Metrics port
N8N_METRICS_PORT=9090

# Health check endpoint
# Available at: GET /healthz
N8N_HEALTHCHECK_SERVER_ENABLED=true
N8N_HEALTHCHECK_SERVER_PORT=5678

# ================================================================
# EXTERNAL HOOKS (for custom integrations)
# ================================================================

# External hooks directory
# EXTERNAL_HOOK_FILES=/path/to/hooks

# ================================================================
# DEPLOYMENT NOTES
# ================================================================

# For horizontal scaling:
# 1. Deploy 1 main instance with N8N_PROCESS_TYPE=main
# 2. Deploy N worker instances with N8N_PROCESS_TYPE=worker
# 3. All instances must connect to same Redis and PostgreSQL
# 4. Load balancer points to main instance for UI access
# 5. Webhooks can go to any instance (main or workers)

# Recommended setup:
# - 1 main instance (2 CPU, 4GB RAM)
# - 3-5 worker instances (2 CPU, 4GB RAM each)
# - 1 Redis instance (1 CPU, 2GB RAM)
# - Shared PostgreSQL (via Supabase)

# Environment-specific files:
# - .env.n8n.dev (development)
# - .env.n8n.staging (staging)
# - .env.n8n.production (production)

# ================================================================
# USAGE
# ================================================================

# Main instance (UI + scheduling + execution):
# docker run -d --env-file .env.n8n -p 5678:5678 n8nio/n8n

# Worker instance (execution only):
# docker run -d --env-file .env.n8n n8nio/n8n worker

# Or with Docker Compose (see docker-compose.n8n.yml)
