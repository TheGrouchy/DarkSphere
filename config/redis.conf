# ================================================================
# DarkSpere Redis Configuration
# Purpose: Redis setup for n8n queue mode and horizontal scaling
# ================================================================

# ================================================================
# NETWORK
# ================================================================

# Bind to localhost for security (use 0.0.0.0 for cluster mode)
bind 127.0.0.1

# Port
port 6379

# Protected mode - require authentication
protected-mode yes

# Require password for all connections
requirepass CHANGE_ME_REDIS_PASSWORD

# TCP backlog (adjust based on expected connections)
tcp-backlog 511

# Timeout for idle clients (0 = no timeout)
timeout 0

# TCP keepalive
tcp-keepalive 300

# ================================================================
# MEMORY MANAGEMENT
# ================================================================

# Maximum memory (adjust based on available RAM)
# For n8n queue mode, 2GB is recommended minimum
maxmemory 2gb

# Eviction policy when maxmemory is reached
# allkeys-lru: Remove least recently used keys
# This is good for n8n queues as old jobs can be safely removed
maxmemory-policy allkeys-lru

# Number of samples for LRU algorithm
maxmemory-samples 5

# ================================================================
# PERSISTENCE
# ================================================================

# RDB (snapshot) persistence
# Save the DB to disk:
#   after 900 sec (15 min) if at least 1 key changed
#   after 300 sec (5 min) if at least 10 keys changed
#   after 60 sec if at least 10000 keys changed
save 900 1
save 300 10
save 60 10000

# Stop accepting writes if RDB snapshots fail
stop-writes-on-bgsave-error yes

# Compress RDB files
rdbcompression yes

# Checksum RDB files
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Directory for RDB and AOF files
dir /var/lib/redis

# AOF (Append Only File) persistence for durability
appendonly yes
appendfilename "appendonly.aof"

# AOF fsync policy
# always = fsync every write (slow, safest)
# everysec = fsync once per second (good compromise)
# no = don't fsync, let OS decide (fastest, least safe)
appendfsync everysec

# Rewrite AOF file when it grows by 100%
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# ================================================================
# LOGGING
# ================================================================

# Log level: debug, verbose, notice, warning
loglevel notice

# Log file path (empty string = stdout)
logfile /var/log/redis/redis-server.log

# Number of databases (n8n typically uses db 0)
databases 16

# ================================================================
# REPLICATION (for high availability)
# ================================================================

# If this is a replica, uncomment and set master info
# replicaof <masterip> <masterport>
# masterauth <master-password>

# Replica read-only mode
replica-read-only yes

# ================================================================
# PERFORMANCE TUNING
# ================================================================

# Disable slow log (or set threshold in microseconds)
# slowlog-log-slower-than 10000
# slowlog-max-len 128

# Latency monitoring
latency-monitor-threshold 100

# ================================================================
# CLUSTER (for horizontal scaling)
# Uncomment if using Redis Cluster
# ================================================================

# cluster-enabled yes
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000

# ================================================================
# SECURITY
# ================================================================

# Disable dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG ""

# Enable client output buffer limits
# client-output-buffer-limit normal 0 0 0
# client-output-buffer-limit replica 256mb 64mb 60
# client-output-buffer-limit pubsub 32mb 8mb 60

# ================================================================
# N8N SPECIFIC SETTINGS
# ================================================================

# n8n uses Bull queues which work well with these settings

# Increase max clients for n8n workers
maxclients 10000

# Notify keyspace events for queue monitoring
notify-keyspace-events Ex

# ================================================================
# COMMENTS
# ================================================================

# This configuration is optimized for n8n queue mode with:
# - 2GB memory allocation (adjust based on workload)
# - AOF persistence for durability
# - LRU eviction for automatic cleanup
# - Security hardening (password, disabled commands)
# - Monitoring enabled (latency tracking)

# To apply changes:
# 1. Update CHANGE_ME_REDIS_PASSWORD with a strong password
# 2. Copy to /etc/redis/redis.conf
# 3. Restart Redis: systemctl restart redis
# 4. Verify: redis-cli -a PASSWORD ping
